[{"/Users/sakthivel/Desktop/react-project/react-hook-form/src/index.js":"1","/Users/sakthivel/Desktop/react-project/react-hook-form/src/App.js":"2"},{"size":146,"mtime":1610385305384,"results":"3","hashOfConfig":"4"},{"size":1988,"mtime":1611075673847,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18c2v5p",{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"/Users/sakthivel/Desktop/react-project/react-hook-form/src/index.js",[],"/Users/sakthivel/Desktop/react-project/react-hook-form/src/App.js",["11"],"import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = (data) => {\n    console.log(data);\n  };\n\n  //   CUSTOM VALIDATION\n  const validatePassword = (value) => {\n    if (value.length < 6) {\n      return \"Password should be at-least 6 characters.\";\n    } else if (\n      !/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s)(?=.*[!@#$*])/.test(value)\n    ) {\n      return \"Password should contain at least one uppercase letter, lowercase letter, digit, and special symbol.\";\n    }\n    return true;\n  };\n\n  return (\n    <div className=\"app\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <h1>Form with react-hook-form library</h1>\n        <div className=\"form-control\">\n          <label>Email :</label>\n          <input\n            type=\"text\"\n            name=\"email\"\n            ref={register({\n              required: \"Email is required.\",\n              pattern: {\n                value: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\n                message: \"Email is not valid.\",\n              },\n            })}\n          />\n          {errors.email && <p className=\"errorMsg\">{errors.email.message}</p>}\n        </div>\n        <div className=\"form-control\">\n          <label>Password :</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            ref={register({\n              required: \"Password is required.\",\n              //   validate: validatePassword,\n              minLength: {\n                value: 6,\n                message: \"Password should be at-least 6 characters.\",\n              },\n            })}\n          />\n          {errors.password && (\n            <p className=\"errorMsg\">{errors.password.message}</p>\n          )}\n        </div>\n        <div className=\"form-control button-wrap\">\n          <label></label>\n          <button type=\"submit\">Login</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n",{"ruleId":"12","severity":1,"message":"13","line":13,"column":9,"nodeType":"14","messageId":"15","endLine":13,"endColumn":25},"no-unused-vars","'validatePassword' is assigned a value but never used.","Identifier","unusedVar"]